<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="git.demo.mapper.MemberMapper">



<!--    <select id="findLoginId" parameterType="map" resultType="git.demo.domain.member.Member">-->
<!--        select id, userid, pw from member-->
<!--        where userid= #{loginId} and pw= #{loginPw}-->
<!--    </select>-->

    <resultMap id="memberDTO" type="git.demo.domain.member.Member">
        <result property="id" column="id"/>
        <result property="userName" column="username"/>
        <result property="userId" column="userid"/>
        <result property="userPw" column="pw"/>
        <result property="userEmail" column="email"/>
    </resultMap>

<!--    <select id="findLoginId" resultMap="memberDTO">-->
<!--        select id, userid,pw from member-->
<!--        where userid= #{loginId} and pw= #{loginPw}-->
<!--    </select>-->

    <select id="findMemberById" resultMap="memberDTO">
        select id, username, userid, pw, email from member
        where userid= #{loginId}
    </select>



    <insert id="insertMember" parameterType="git.demo.domain.member.Member" >
            INSERT INTO member(id,username,userid,pw,email)
            values(#{id}, #{userName}, #{userId}, #{userPw}, #{userEmail})
    </insert>

    <select id="isExistsId" resultType="boolean">
        SELECT EXISTS(select userid from member where userid= #{userId})
    </select>

    <update id="updateUserPassword" parameterType="String">
        UPDATE member SET pw = #{newPassword}
        WHERE userid= #{userId}
    </update>

    <select id="findEmailByName" resultType="String">
        SELECT email from member
        WHERE username= #{userName} and email=#{getUserEmail}
    </select>

    <select id="findUseridByEmail" resultType="String">
        SELECT userid from member
        WHERE  email=#{email}
    </select>

    <select id="findPwByUserId" resultType="String">
        SELECT pw from member
        WHERE userid=#{userId}
    </select>

    <delete id="deleteMember" parameterType="Long">
        DELETE FROM MEMBER
        WHERE id=#{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM MEMBER
    </delete>
</mapper>